"""
Django settings for es_search_server project.

Generated by 'django-admin startproject' using Django 2.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""
import os
import sys

from elasticsearch import Elasticsearch

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.insert(0,BASE_DIR)
sys.path.insert(0,os.path.join(BASE_DIR,'apps'))
sys.path.insert(0,os.path.join(BASE_DIR,'api'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '+@p05t1$_ujhc+tren-@e17$&uy_b(-9*(jvgk-rd)mj411x!i'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*',]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app.search.apps.SearchConfig',
    'rest_framework',
    'django_filters',
    'corsheaders',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'es_search_server.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates'
        ,
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'es_search_server.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'es_search_db',
        'HOST': '127.0.0.1',
        'PORT': 3306,
        'USER': 'root',
        'PASSWORD': 'oracle',
        #使用mysql的innodb引擎,MyISAM虽快但没有事务rollback
        'OPTIONS':{'init_command':'SET default_storage_engine=INNODB;'},
        "CONN_MAX_AGE": 600,
        'TEST': {
            'CHARSET': 'utf8',
            'COLLATION': 'utf8_general_ci',
        }
    },
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
#指定导出的静态文件存放目录
STATIC_ROOT=os.path.join(BASE_DIR,'www')


#设置可以跨域访问
CORS_ORIGIN_ALLOW_ALL=True

#跨域所能请求的域名
CORS_ORIGIN_WHITELIST = (
    'http://*:*',
    #'http://127.0.0.1:8080',
)


REST_FRAMEWORK={
    # #设置所有接口都需要验证
    # 'DEFAULT_PERMISSION_CLASSES': (
    #     'rest_framework.permissions.IsAuthenticated',
    #                               ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        # 'utils.authentication.TokenAuthentication',
                                        ),
    #'UNAUTHENTICATED_USER':lambda :'匿名用户'
    # 'DEFAULT_THROTTLE_CLASSES': (
    # 'rest_framework.throttling.AnonRateThrottle',
    # 'rest_framework.throttling.UserRateThrottle'
    #                           ),
    # 'DEFAULT_THROTTLE_RATES': {
    # 'anon': '1/minute',
    # 'user': '1/minute'        },
    'DATETIME_FORMAT': "%Y-%m-%d",
    'HTML_SELECT_CUTOFF': 10000,
    'HTML_SELECT_CUTOFF_TEXT': '太多了,我加载不出来了',
    }


es = Elasticsearch(
    ["127.0.0.1:9200"],
    sniff_on_start=True,  # 连接前测试
    sniff_on_connection_fail=True,  # 节点无响应时刷新节点
    sniff_timeout=60,  # 设置超时时间
    ignore=400
)


try:
    from .settings_local import *

    from . import settings_local

    if hasattr(settings_local, 'CUSTOM_INSTALLED_APPS'):
        INSTALLED_APPS += settings_local.CUSTOM_INSTALLED_APPS
    if hasattr(settings_local, 'CUSTOM_MIDDLEWARE_CLASSES'):
        MIDDLEWARE += settings_local.CUSTOM_MIDDLEWARE
except ImportError:
    pass
